<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>uniapp 笔记</title>
    <link href="/reading.github.io/2022/04/10/uniapp%E7%AC%94%E8%AE%B0/"/>
    <url>/reading.github.io/2022/04/10/uniapp%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>最近公司有一个开发小程序 + app的需求，没办法，只好用uniapp搞一波了。。。。。。<br>在这里做个笔记，方便前期开发的时候翻看</p><h2 id="路由与页面跳转"><a href="#路由与页面跳转" class="headerlink" title="路由与页面跳转"></a>路由与页面跳转</h2><h4 id="navigator组件跳转"><a href="#navigator组件跳转" class="headerlink" title="navigator组件跳转"></a>navigator组件跳转</h4><figure class="highlight ada"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><pre><code class="hljs ada">&lt;navigator <br>  url=<span class="hljs-string">&quot;跳转路径&quot;</span> <br>  open-<span class="hljs-keyword">type</span>=<span class="hljs-string">&quot;跳转方式&quot;</span> <br>  <span class="hljs-keyword">delta</span>=<span class="hljs-string">&quot;当 open-type 为 &#x27;navigateBack&#x27; 时有效，表示回退的层数&quot;</span><br>&gt;<br>  路由跳转<br>&lt;/navigator&gt;<br></code></pre></td></tr></table></figure><p><img src="open-type.png"></p><h4 id="api跳转"><a href="#api跳转" class="headerlink" title="api跳转"></a>api跳转</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">uni.navigateTo(&#123;<br>    url: <span class="hljs-string">&#x27;/pages/index/index&#x27;</span>      <span class="hljs-regexp">//</span> 默认跳转<br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">uni.switchTab(&#123;<br>    url: <span class="hljs-string">&#x27;/pages/index/index&#x27;</span>      <span class="hljs-regexp">//</span> tabbar跳转<br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">uni.redirectTo(&#123;<br>    url: <span class="hljs-string">&#x27;/pages/index/index&#x27;</span>      <span class="hljs-regexp">//</span> 重定向<br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">uni.navigateBack(&#123;<br>    url: <span class="hljs-string">&#x27;/pages/index/index&#x27;</span>      <span class="hljs-regexp">//</span> 返回上一个页面<br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">uni.reLaunch(&#123;<br>    url: <span class="hljs-string">&#x27;/pages/index/index&#x27;</span>      <span class="hljs-regexp">//</span> 重加载<br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">getCurrentPages</span><span class="hljs-params">()</span></span>  <span class="hljs-comment">// 获取当前页面栈</span><br></code></pre></td></tr></table></figure><br /><h2 id="数据缓存"><a href="#数据缓存" class="headerlink" title="数据缓存"></a>数据缓存</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">uni.set<span class="hljs-constructor">StorageSync(&#x27;<span class="hljs-params">xxx</span>&#x27;, <span class="hljs-params">this</span>.<span class="hljs-params">productId</span>)</span>  <span class="hljs-comment">// 将 data 存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个同步接口。</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">uni.getStorageSync(<span class="hljs-string">&#x27;xxx&#x27;</span>) <span class="hljs-regexp">//</span> 从本地缓存中同步获取指定 key 对应的内容。<br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">uni.remove<span class="hljs-constructor">Storage(&#123; <span class="hljs-params">key</span>: &#x27;<span class="hljs-params">xxx</span>&#x27; &#125;)</span>  <span class="hljs-comment">//  从本地缓存中异步移除指定 key。</span><br></code></pre></td></tr></table></figure><h2 id="数据请求"><a href="#数据请求" class="headerlink" title="数据请求"></a>数据请求</h2><h4 id="我自己封装了一下"><a href="#我自己封装了一下" class="headerlink" title="我自己封装了一下"></a>我自己封装了一下</h4><p>/until/api.js</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">// http://52.193.133.155:8888/muzimed_mobile测试服务器</span><br><span class="hljs-comment">// http://192.168.50.62:8888/muzimed_mobilejsy服务器</span><br>const BASE_URL = &#x27;http:<span class="hljs-comment">//f513z54511.51vip.biz/muzimed_mobile&#x27;</span><br><span class="hljs-comment">// const BASE_URL = &#x27;http://52.193.133.155:8888/muzimed_mobile&#x27;</span><br><br>export const api =<span class="hljs-function"> (<span class="hljs-params">options</span>) =&gt;</span> &#123;<br>  const header_tmp = &#123;<br>  <span class="hljs-string">&quot;Authorization&quot;</span>: uni.get<span class="hljs-constructor">StorageSync(<span class="hljs-string">&quot;token&quot;</span>)</span>,<br>&#x27;Content-Type&#x27;: options.contentType<span class="hljs-operator"> || </span>&#x27;application/json&#x27;<br>  &#125;<br> return <span class="hljs-keyword">new</span> <span class="hljs-constructor">Promise((<span class="hljs-params">resolve</span>, <span class="hljs-params">reject</span>)</span> =&gt; &#123;<br> uni.request(&#123;<br> url: BASE_URL + options.url,<br> <span class="hljs-keyword">method</span>: options.<span class="hljs-keyword">method</span><span class="hljs-operator"> || </span>&#x27;GET&#x27;,<br> data: options.data<span class="hljs-operator"> || </span>&#123;&#125;,<br> header: header_tmp,<br> success:<span class="hljs-function"> (<span class="hljs-params">res</span>) =&gt;</span> &#123;<br> <span class="hljs-keyword">if</span>(res.data.code<span class="hljs-operator"> === </span><span class="hljs-number">20002</span>) &#123;<br> uni.remove<span class="hljs-constructor">Storage(&#123; <span class="hljs-params">key</span>: &#x27;<span class="hljs-params">rate</span>&#x27; &#125;)</span><br> uni.remove<span class="hljs-constructor">Storage(&#123; <span class="hljs-params">key</span>: &#x27;<span class="hljs-params">openid</span>&#x27; &#125;)</span><br> uni.remove<span class="hljs-constructor">Storage(&#123; <span class="hljs-params">key</span>: &#x27;<span class="hljs-params">token</span>&#x27; &#125;)</span><br> uni.remove<span class="hljs-constructor">Storage(&#123; <span class="hljs-params">key</span>: &#x27;<span class="hljs-params">user</span>&#x27; &#125;)</span><br> uni.show<span class="hljs-constructor">Modal(&#123; <span class="hljs-params">title</span>: &#x27;登录时效已过期，请重新登录&#x27;, <span class="hljs-params">icon</span>: &#x27;<span class="hljs-params">fail</span>&#x27;, <span class="hljs-params">showCancel</span>: <span class="hljs-params">false</span>, <span class="hljs-params">success</span>: ()</span> =&gt; &#123;<br> uni.navigate<span class="hljs-constructor">To(&#123; <span class="hljs-params">url</span>: &#x27;<span class="hljs-operator">/</span><span class="hljs-params">pages</span><span class="hljs-operator">/</span><span class="hljs-params">login</span><span class="hljs-operator">/</span><span class="hljs-params">login</span>&#x27; &#125;)</span><br> &#125;&#125;)<br> &#125; <span class="hljs-keyword">else</span> &#123;<br>resolve(res)<br> &#125;<br> &#125;,<br> fail:<span class="hljs-function"> (<span class="hljs-params">err</span>) =&gt;</span> &#123; reject(err) &#125;<br> &#125;)<br> &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>/main.js</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">import</span> &#123; api &#125; from &#x27;@/until/api.js&#x27;<br><span class="hljs-type">Vue</span>.proto<span class="hljs-keyword">type</span>.$api = api<br></code></pre></td></tr></table></figure><h4 id="实际使用是这样的"><a href="#实际使用是这样的" class="headerlink" title="实际使用是这样的"></a>实际使用是这样的</h4><p>默认GET请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-title">getSwipers</span>(<span class="hljs-params"></span>)</span> &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-built_in">this</span>.$api(&#123;<span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;/open/home/get_banner&#x27;</span>&#125;)<br>  <span class="hljs-built_in">this</span>.swipers = res.data.data<br>&#125;,<br></code></pre></td></tr></table></figure><p>POST请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-title">addCart</span>(<span class="hljs-params"></span>)</span> &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-built_in">this</span>.$api(&#123;<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>    <span class="hljs-attr">contentType</span>: <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>,<br>    <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;/cart/post&#x27;</span>,<br>    <span class="hljs-attr">data</span>: &#123; <span class="hljs-attr">userid</span>: uni.getStorageSync(<span class="hljs-string">&#x27;user&#x27;</span>).id, <span class="hljs-attr">productId</span>: <span class="hljs-built_in">this</span>.productId &#125;<br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><br />]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>笔记</tag>
      
      <tag>vue</tag>
      
      <tag>uniapp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>封装 echarts 到 vue3/vite 组件，简洁优雅，高效可复用</title>
    <link href="/reading.github.io/2022/01/25/%E5%9C%A8vue3-vite%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8echarts/"/>
    <url>/reading.github.io/2022/01/25/%E5%9C%A8vue3-vite%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8echarts/</url>
    
    <content type="html"><![CDATA[<p>最近在做公司财务后台的项目，需要用到大量echarts图表。我搭建的框架是vue3 + vite，在网上浏览了一圈，没找到太靠谱的vue3 <code>echarts</code>组件化方案。我把自己的解决方案整理出来供大家参考，文章可能有很多不足之处，请多见谅。</p><br /><p>这里省略vue3 vite的搭建。。 不知道怎么搭建的朋友，请跳转至 <a href="/reading.github.io/2022/01/24/tailwind-install/" title="在 Vue 3 和 Vite 项目中安装并配置 Tailwind CSS">在 Vue 3 和 Vite 项目中安装并配置 Tailwind CSS</a></p><br /><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="1-安装ECharts"><a href="#1-安装ECharts" class="headerlink" title="1. 安装ECharts"></a>1. 安装ECharts</h3><figure class="highlight ada"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs ada">npm install echarts <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><h3 id="2-创建全局组件"><a href="#2-创建全局组件" class="headerlink" title="2. 创建全局组件"></a>2. 创建全局组件</h3><p>创建 <code>components/BaseChart.vue</code> 组件，加载并初始化echarts容器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:id</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;w-full h-full&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> &#123; onMounted, ref, watch &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span><br><span class="javascript"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> echarts <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;echarts&#x27;</span></span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">props</span>: &#123;</span><br><span class="javascript">    <span class="hljs-attr">id</span>: &#123;</span><br><span class="javascript">      <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,</span><br><span class="javascript">      <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span></span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-attr">options</span>: &#123;</span><br><span class="javascript">      <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>,</span><br><span class="javascript">      <span class="hljs-attr">type</span>: <span class="hljs-built_in">Object</span>,</span><br><span class="javascript">      <span class="hljs-attr">default</span>: <span class="hljs-function">() =&gt;</span> &#123;&#125;</span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params">props</span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">let</span> myChart</span><br><span class="javascript"></span><br><span class="javascript">    onMounted(<span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="javascript">      myChart = echarts.init(<span class="hljs-built_in">document</span>.getElementById(props.id))</span><br><span class="javascript">      myChart.setOption(props.options)</span><br><span class="javascript">    &#125;)</span><br><span class="javascript"></span><br><span class="javascript">    watch(<span class="hljs-function">() =&gt;</span> props.options, <span class="hljs-function">(<span class="hljs-params">newOptions</span>) =&gt;</span> &#123;</span><br><span class="javascript">      myChart.setOption(newOptions)</span><br><span class="javascript">    &#125;, &#123; <span class="hljs-attr">deep</span>: <span class="hljs-literal">true</span> &#125;)</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-创建存放图表配置的js文件"><a href="#2-创建存放图表配置的js文件" class="headerlink" title="2. 创建存放图表配置的js文件"></a>2. 创建存放图表配置的js文件</h3><p>创建 <code>/src/charts/barChartOptions.js</code> 文件，存放echarts配置</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs vim">import * <span class="hljs-keyword">as</span> echarts from <span class="hljs-string">&#x27;echarts&#x27;</span><br>export default <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">barChartOptions</span><span class="hljs-params">(xData, yData)</span> &#123;</span><br>  <span class="hljs-keyword">return</span> &#123;<br>    xAxi<span class="hljs-variable">s:</span> &#123;<br>      <span class="hljs-built_in">type</span>: <span class="hljs-string">&#x27;category&#x27;</span>,<br>      dat<span class="hljs-variable">a:</span> xData,<br>    &#125;,<br>    yAxi<span class="hljs-variable">s:</span> &#123;<br>      <span class="hljs-built_in">type</span>: <span class="hljs-string">&#x27;value&#x27;</span><br>    &#125;,<br>    tooltip: &#123;<br>      trigger: <span class="hljs-string">&#x27;axis&#x27;</span>,<br>      axisPointer: &#123;<br>        <span class="hljs-built_in">type</span>: <span class="hljs-string">&#x27;shadow&#x27;</span><br>      &#125;<br>    &#125;,<br>    grid:&#123;<br>      top:<span class="hljs-number">30</span>,<br>      lef<span class="hljs-variable">t:45</span>,// 调整这个属性<br>      righ<span class="hljs-variable">t:30</span>,<br>      bottom:<span class="hljs-number">30</span>,<br>    &#125;,<br>    serie<span class="hljs-variable">s:</span> [<br>      &#123;<br>        <span class="hljs-built_in">type</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,<br>        dat<span class="hljs-variable">a:</span> yData,<br>        itemStyle:&#123;<br>          color:<span class="hljs-keyword">new</span> echarts.graphic.LinearGradient(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, [&#123;<br>            offse<span class="hljs-variable">t:</span> <span class="hljs-number">0</span>,<br>            color: <span class="hljs-string">&#x27;#f87171&#x27;</span><br>          &#125;, &#123;<br>            offse<span class="hljs-variable">t:</span> <span class="hljs-number">1</span>,<br>            color: <span class="hljs-string">&#x27;rgba(248,113,113,0.1)&#x27;</span><br>          &#125;]),<br>        &#125;,<br>        labe<span class="hljs-variable">l:</span> &#123;<br>          sho<span class="hljs-variable">w:</span> true,<br>          position: <span class="hljs-string">&#x27;top&#x27;</span><br>        &#125;<br>      &#125;<br>    ]<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="在页面中使用"><a href="#在页面中使用" class="headerlink" title="在页面中使用"></a>在页面中使用</h3><p><code>/src/views/echart.vue</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">base-chart</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;numCharts&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">  <span class="hljs-keyword">import</span> barChartOptions <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;/src/charts/barChartOptions.js&#x27;</span></span><br><span class="javascript">  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">    <span class="hljs-attr">components</span>: &#123;</span><br><span class="javascript">      ChartBar</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-keyword">const</span> options = barChartOptions([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">23</span>],[<span class="hljs-number">111</span>, <span class="hljs-number">222</span>, <span class="hljs-number">333</span>])</span><br><span class="javascript">      <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">        options</span><br><span class="javascript">      &#125;</span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>教程</tag>
      
      <tag>vue3</tag>
      
      <tag>vite</tag>
      
      <tag>echarts</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TailwindCSS v3.0 的新特性</title>
    <link href="/reading.github.io/2022/01/24/tailwindcss3.0-%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <url>/reading.github.io/2022/01/24/tailwindcss3.0-%E6%96%B0%E7%89%B9%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<p>2021 年 12 月 10 日，TailwindCSS 的创始人 Adam Wathan 宣布 TailwindCSS v3.0 正式发布，带来了一系列性能上的改进、对开发工作流的改善以及大量的新特性。那么这颗在 CSS 工程化领域极为耀眼的新星在 v3.0 为我们带来了那些有趣的新特性呢？我们来整理一下。</p><h2 id="随时随地的-Just-in-Time-模式"><a href="#随时随地的-Just-in-Time-模式" class="headerlink" title="随时随地的 Just-in-Time 模式"></a>随时随地的 Just-in-Time 模式</h2><p>在 v3.0 中，Tailwind 内置了 JIT，无需在配置文件里面声明 JIT 模式，默认就是按需构建、可使用任意辅助类、开发和生产构建方式与产物统一，避免了不一致性、还获得了极大的性能优化。</p><br /><h2 id="所有的颜色都开箱即用"><a href="#所有的颜色都开箱即用" class="headerlink" title="所有的颜色都开箱即用"></a>所有的颜色都开箱即用</h2><p>在 v3.0 之前，为了关注在开发模式下 CSS 体积的大小，Tailwind 必须要小心的限制可用的颜色，但是在 v3.0 之后，我们可以引入了很多新的调色板颜色，如 cyan（天蓝色）、rose（玫瑰色）、fuchsia（紫红色）、lime（酸橙色）以及 15 中灰色的阴影，而无需担心日益增大的 CSS 文件体积。</p><br /><h2 id="支持有颜色的阴影"><a href="#支持有颜色的阴影" class="headerlink" title="支持有颜色的阴影"></a>支持有颜色的阴影</h2><figure class="highlight xml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bg-cyan-500 shadow-lg shadow-cyan-500/50 ...&quot;</span>&gt;</span>Subscribe<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></td></tr></table></figure><br /><h2 id="打印修饰符"><a href="#打印修饰符" class="headerlink" title="打印修饰符"></a>打印修饰符</h2><p>添加了 print 修饰符，使得你可以在用户打印你的网站时如何展现：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">article</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;print:hidden&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>My Secret Pizza Recipe<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>This recipe is a secret, and must not be shared with anyone<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- ... --&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hidden print:block&quot;</span>&gt;</span><br>    Are you seriously trying to print this? It&#x27;s secret!<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><br /><h2 id="aspect-ratio"><a href="#aspect-ratio" class="headerlink" title="aspect-ratio"></a>aspect-ratio</h2><p>aspect-ratio  CSS 属性为box容器规定了一个期待的纵横比</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;iframe <span class="hljs-attribute">class</span>=<span class="hljs-string">&quot;w-full aspect-video ...&quot;</span> <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;https://www.youtube.com/...&quot;</span>&gt;&lt;/iframe&gt;<br></code></pre></td></tr></table></figure><h2 id="滚动捕捉"><a href="#滚动捕捉" class="headerlink" title="滚动捕捉"></a>滚动捕捉</h2><br /><h2 id="多列布局"><a href="#多列布局" class="headerlink" title="多列布局"></a>多列布局</h2><p>tailwindcss 3.0 加入了 <code>columns</code>列布局支持,也被称之为 “新闻版式布局” 类型，这种布局非常有用，同时应用在底部的导航栏布局设计时也是非常有用的。</p>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>笔记</tag>
      
      <tag>css</tag>
      
      <tag>tailwind css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端面试题</title>
    <link href="/reading.github.io/2022/01/24/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <url>/reading.github.io/2022/01/24/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>工作需要，整理了一些前端面试题。大多数都是一些很常用、很基础的问题。随着经验的增长，以后我会不断完善。</p><h2 id="html-css"><a href="#html-css" class="headerlink" title="html/css"></a>html/css</h2><h3 id="1-会使用flex布局吗？-请使用flex实现垂直居中"><a href="#1-会使用flex布局吗？-请使用flex实现垂直居中" class="headerlink" title="1. 会使用flex布局吗？ 请使用flex实现垂直居中"></a>1. 会使用flex布局吗？ 请使用flex实现垂直居中</h3><figure class="highlight css"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs css">&#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: center<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-flex-grow-属性的用途？"><a href="#2-flex-grow-属性的用途？" class="headerlink" title="2. flex-grow 属性的用途？"></a>2. flex-grow 属性的用途？</h3><p>该属性规定了在flex容器中分配剩余空间的相对比例</p><h3 id="3-会使用Grid布局吗？-Grid布局和flex布局有什么区别？"><a href="#3-会使用Grid布局吗？-Grid布局和flex布局有什么区别？" class="headerlink" title="3. 会使用Grid布局吗？ Grid布局和flex布局有什么区别？"></a>3. 会使用Grid布局吗？ Grid布局和flex布局有什么区别？</h3><p>Flexbox 是一种一维布局。一行或者一列。Grid 是一种二维布局。多行和多列。</p><h3 id="4-如何让使用css定义元素的宽高比？"><a href="#4-如何让使用css定义元素的宽高比？" class="headerlink" title="4. 如何让使用css定义元素的宽高比？"></a>4. 如何让使用css定义元素的宽高比？</h3><p>padding-top: 100%  或  aspect-ratop</p><h3 id="5-是否做过响应式布局？"><a href="#5-是否做过响应式布局？" class="headerlink" title="5. 是否做过响应式布局？"></a>5. 是否做过响应式布局？</h3><br /><h2 id="javaScript"><a href="#javaScript" class="headerlink" title="javaScript"></a>javaScript</h2><h3 id="1-请介绍一下arr-map方法"><a href="#1-请介绍一下arr-map方法" class="headerlink" title="1. 请介绍一下arr.map方法"></a>1. 请介绍一下arr.map方法</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">arr.map(<span class="hljs-keyword">item</span> =&gt; <span class="hljs-keyword">item</span>.<span class="hljs-built_in">length</span>)<br></code></pre></td></tr></table></figure><p><code>map方法</code> 对数组的每个元素都调用函数，并返回结果数组</p><h3 id="2-了解-Promise-吗-Promise-解决的痛点是什么"><a href="#2-了解-Promise-吗-Promise-解决的痛点是什么" class="headerlink" title="2. 了解 Promise 吗 ? Promise 解决的痛点是什么?"></a>2. 了解 Promise 吗 ? Promise 解决的痛点是什么?</h3><p>Promise 是异步编程的一种解决方案，比传统的解决方案（回调函数）更加合理和更加强大。<br>链式操作减低了编码难度，代码可读性明显增强</p><h3 id="3-Promise的三种状态"><a href="#3-Promise的三种状态" class="headerlink" title="3. Promise的三种状态?"></a>3. Promise的三种状态?</h3><p>pending（进行中）<br>fulfilled（已成功）<br>rejected（已失败）</p><br /><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><h3 id="1-vue2-和-vue3-的区别？"><a href="#1-vue2-和-vue3-的区别？" class="headerlink" title="1. vue2 和 vue3 的区别？"></a>1. vue2 和 vue3 的区别？</h3><h4 id="1-响应式原理的改变"><a href="#1-响应式原理的改变" class="headerlink" title="1) 响应式原理的改变"></a>1) 响应式原理的改变</h4><p>Vue2响应式原理采用的是<code>defineProperty</code>，而vue3选用的是<code>proxy</code>。这两者前者是修改对象属性的权限标签，后者是代理整个对象。性能上proxy会更加优秀。</p><h4 id="2-diff算法，渲染算法的改变"><a href="#2-diff算法，渲染算法的改变" class="headerlink" title="2) diff算法，渲染算法的改变"></a>2) diff算法，渲染算法的改变</h4><p>Vue3优化diff算法。不再像vue2那样比对所有dom，而采用了<code>block tree</code>的做法。此外重新渲染的算法里也做了改进，利用了闭包来进行缓存。这使得vue3的速度比vue2快了6倍。</p><h4 id="3-组合式API"><a href="#3-组合式API" class="headerlink" title="3) 组合式API"></a>3) 组合式API</h4><p>vue3使用<code>组合式Api（Composition API）</code>，相比于vue2<code>选项类型API（Options API）</code>更加简洁，更加符合代码逻辑。</p><h3 id="2-v-for-和-v-if-的优先级"><a href="#2-v-for-和-v-if-的优先级" class="headerlink" title="2. v-for 和 v-if 的优先级"></a>2. v-for 和 v-if 的优先级</h3><p>在vue2中，v-for &gt; v-if<br>在vue3中，v-if &gt; v-for</p><h3 id="3-key值的作用"><a href="#3-key值的作用" class="headerlink" title="3. key值的作用"></a>3. key值的作用</h3><p>key的作用主要是为了高效的更新虚拟DOM，vue在patch的过程中通过key值判断两个节点是否是同一个，从而减少Dom操作量</p><h3 id="4-自己开发过-封装过哪些组件？"><a href="#4-自己开发过-封装过哪些组件？" class="headerlink" title="4. 自己开发过/封装过哪些组件？"></a>4. 自己开发过/封装过哪些组件？</h3><h3 id="5-是否会使用uniapp开发App？"><a href="#5-是否会使用uniapp开发App？" class="headerlink" title="5. 是否会使用uniapp开发App？"></a>5. 是否会使用uniapp开发App？</h3><h3 id="6-是否了解vue-ssr？"><a href="#6-是否了解vue-ssr？" class="headerlink" title="6. 是否了解vue ssr？"></a>6. 是否了解vue ssr？</h3><p>CSR全称是 <code>Client Side Rendering</code> ，代表的是客户端渲染。顾名思义，就是在渲染工作在客户端（浏览器）进行，而不是在服务器端进行。举个例子，我们平时用vue，react等框架开发的项目，都是先下载html文档（不是最终的完全的html），然后下载js来执行渲染出页面结果。</p><p>SSR全称是 <code>Server Side Rendering</code>，代表的是服务端渲染。与客户端渲染不同的是，SSR输出的是一个渲染完成的html，整个渲染过程是在服务器端进行的。例如传统的JSP，PHP都是服务端渲染。</p><h3 id="7-项目性能优化？"><a href="#7-项目性能优化？" class="headerlink" title="7. 项目性能优化？"></a>7. 项目性能优化？</h3><ol><li>减少 HTTP 请求</li><li>压缩文件</li><li>图片懒加载<br>响应式图片<br>调整图片大小<br>降低图片质量<br>尽可能利用 CSS3 效果代替图片<br>使用 webp 格式的图片</li><li>使用flex布局</li><li>减少重绘重排<br>重排: 当改变 DOM 元素位置或大小时，会导致浏览器重新生成渲染树，这个过程叫重排。<br>重绘: 当重新生成渲染树后，就要将渲染树每个节点绘制到屏幕，这个过程叫重绘。</li></ol><h4 id="什么操作会导致重排？"><a href="#什么操作会导致重排？" class="headerlink" title="什么操作会导致重排？"></a>什么操作会导致重排？</h4><p>添加或删除可见的 DOM 元素<br>元素位置改变<br>元素尺寸改变<br>内容改变<br>浏览器窗口尺寸改变</p>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>css</tag>
      
      <tag>vue</tag>
      
      <tag>面试</tag>
      
      <tag>html</tag>
      
      <tag>javaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在 Vue 3 和 Vite 项目中安装并配置 Tailwind CSS</title>
    <link href="/reading.github.io/2022/01/24/tailwind-install/"/>
    <url>/reading.github.io/2022/01/24/tailwind-install/</url>
    
    <content type="html"><![CDATA[<h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="1-初始化vite项目"><a href="#1-初始化vite项目" class="headerlink" title="1. 初始化vite项目"></a>1. 初始化vite项目</h3><br /><p>首先，我们要初始化一个vite项目，npm init vite + 项目名称</p><figure class="highlight applescript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs applescript">npm init vite <span class="hljs-keyword">my</span>-project<br></code></pre></td></tr></table></figure><br /><p>接下来，我们看到几个vite选项，如下：</p><p><img src="vite-init-a.png" alt="首先选择一个框架， 这里我们直接选择 vue"></p><p><img src="vite-init-b.png" alt="这里是确定项目中是否使用TypeScript。我们这里暂时先选择第一个，不使用TypeScript"></p><p><img src="vite-init-c.png" alt="完成！"></p><p>我们接着按照提示操作</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">cd my-<span class="hljs-keyword">project</span><br>npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><p>至此， 我们已经成功初始化并安装了一个vue3 + vite项目</p><br /><h3 id="2-安装-Tailwind-CSS"><a href="#2-安装-Tailwind-CSS" class="headerlink" title="2. 安装 Tailwind CSS"></a>2. 安装 Tailwind CSS</h3><p>通过 npm安装tailwindcss及其对等依赖项，然后运行 ​​init 命令生成<code>tailwind.config.js</code>和<code>postcss.config.js.</code></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">npm install -D tailwindcss postcss <span class="hljs-built_in">auto</span>prefixer<br>npx tailwindcss init -p<br></code></pre></td></tr></table></figure><br /><h3 id="3-配置模板路径"><a href="#3-配置模板路径" class="headerlink" title="3. 配置模板路径"></a>3. 配置模板路径</h3><p>打开<code>tailwind.config.js</code>文件，在文件中添加所有模板文件的路径</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dts">module.exports = &#123;<br><span class="hljs-symbol">  content:</span> [<br>    <span class="hljs-string">&quot;./index.html&quot;</span>,<br>    <span class="hljs-string">&quot;./src/**/*.&#123;vue,js,ts,jsx,tsx&#125;&quot;</span>,<br>  ],<br><span class="hljs-symbol">  theme:</span> &#123;<br><span class="hljs-symbol">    extend:</span> &#123;&#125;,<br>  &#125;,<br><span class="hljs-symbol">  plugins:</span> [],<br>&#125;<br></code></pre></td></tr></table></figure><br /><h3 id="3-将-Tailwind-指令添加到-CSS"><a href="#3-将-Tailwind-指令添加到-CSS" class="headerlink" title="3. 将 Tailwind 指令添加到 CSS"></a>3. 将 Tailwind 指令添加到 CSS</h3><p>在<code>src</code>文件夹中创建一个<code>index.css</code>文件并<code>@tailwind</code>为 Tailwind 的每个层添加指令。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-comment">/* /src/index.css */</span><br><span class="hljs-variable">@tailwind</span> base;<br><span class="hljs-variable">@tailwind</span> components;<br><span class="hljs-variable">@tailwind</span> utilities;<br></code></pre></td></tr></table></figure><br /><h3 id="4-导入-CSS-文件"><a href="#4-导入-CSS-文件" class="headerlink" title="4. 导入 CSS 文件"></a>4. 导入 CSS 文件</h3><p>在 <code>main.js</code> 文件中导入 <code>./src/index.css</code> </p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./index.css&#x27;</span><br><br>createApp(App).mount(<span class="hljs-string">&#x27;#app&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="5-运行"><a href="#5-运行" class="headerlink" title="5. 运行"></a>5. 运行</h3><p>运行 <code>npm run dev</code> </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">npm <span class="hljs-builtin-name">run</span> dev<br></code></pre></td></tr></table></figure><p><img src="localhost-3000.png" alt="看到这个提示后，打开 http://localhost:3000/"></p><p><img src="run-dev.png" alt="看到这个页面，就成功了"></p></br ><h3 id="6-调试"><a href="#6-调试" class="headerlink" title="6. 调试"></a>6. 调试</h3><p>在vscode的扩展商店搜索 <code>tailwind</code> 安装 <code>tailwind CSS IntelliSense</code> 智能提示插件</p><p><img src="install-plugin.png"></p><p>我们在 <code>App.vue</code> 使用一下看看效果吧</p><p><img src="plugin.png" alt="安装插件后可以看到tailwind语法提示，极大提高开发效率"></p><p>我们可以随便设置个样式， 看看效果吧</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;text-5xl text-red-400 font-bold&quot;</span>&gt;<br>  我成功了！！！！<br>&lt;/<span class="hljs-keyword">div</span>&gt;<br></code></pre></td></tr></table></figure><p><img src="success.png"></p></br ><h4 id="恭喜您已经完成了所有步骤！！"><a href="#恭喜您已经完成了所有步骤！！" class="headerlink" title="恭喜您已经完成了所有步骤！！"></a>恭喜您已经完成了所有步骤！！</h4></br>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>css</tag>
      
      <tag>tailwind css</tag>
      
      <tag>教程</tag>
      
      <tag>vue3</tag>
      
      <tag>vite</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/reading.github.io/2022/01/21/hello-world/"/>
    <url>/reading.github.io/2022/01/21/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
